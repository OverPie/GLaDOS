#!/usr/bin/python3.7
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.utils import get_random_id
from token2 import *
from util import *
from photo import *
from smeh import *
# from wall import post
import vk_api, requests, sys
from threading import Thread
from vksql import saveload
vk_session = vk_api.VkApi(token=token)
vk_session2 = vk_api.VkApi(token=token22)
vk = vk_session.get_api()
vk2 = vk_session2.get_api()
longpoll = VkBotLongPoll(vk_session, group_idd)
msgcount = 0
from vksql import *
from botutil import *
# timestatus = nowtime()
# varlalle = Thread(target=post, args=(vk, vk2), daemon=True)
# varlalle.start()
try:
    for event in longpoll.listen():
        if event.type == VkBotEventType.GROUP_JOIN:
            groupjoin(vk, event)
        try:
            vk.groups.enableOnline(group_id=group_idd)
        except vk_api.exceptions.ApiError:
            None
        response = {"message":None}
        if event.object.text:
            text = event.object.text.split()
            uid = event.object.from_id
            uname = getusername(vk,uid)
            if checkban(uid) == "kill him":
                continue
            try:
                requests = text[0].lower()
            except IndexError:
                continue
            if checktable("admins","id", uid):
                if requests == "/–±–∞–Ω":
                        ban(event.object.reply_message['from_id'])
                elif requests == "/—Ä–∞–∑–±–∞–Ω":
                        unban(event.object.reply_message['from_id'])
            if requests == "/–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä":
                response = calc(text)
            elif requests == "/–ø–æ–≥–æ–¥–∞":
                response = weather(text)
            elif requests == "—Å–ª–∞–≤–∞":
                response = {"message":"üá∫üá¶—É–∫—Ä–∞–∏–Ω–µüá∫üá¶"}
            elif requests in ["–ø—Ä–∏–≤–µ—Ç", "–∫—É", "–∑–∏–≥", "—Å–ø–æ–∫–∏", "—Å–ø–æ–∫–æ–π–Ω–æ–π"]:
                response = answer(text)
            elif requests == "/off" and event.from_id == 367919273:
                sys.exit()
            elif requests in helpspisok:
                response = {"message":help}
            elif requests == "/–∫—Ä–∞—Å–∏–ª–æ–≤":
                vk.messages.send(user_id=event.user_id, random_id=get_random_id(),
                                message="Krasyliv")
            elif requests == "/–∫–∞—Ç—ã":
                response = cats(vk2, text)
            elif requests == "/–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫":
                response = translit(text, vk)
            elif requests == "/—é—Ä–∏":
                response = yuri(vk2, text)
            elif requests == "/–≥–µ–±–±–µ–ª—å—Å":
                response = gebbels(vk2, text)
            elif requests == "/—è–æ–π":
                response = yaoi(vk2, text)
            elif requests == "/—Ç—Ä–∞–ø—ã":
                response = trap(vk2, text)
            elif requests == "/–ª–æ–ª–∏":
                response = loli(vk2,text)
            elif requests == "/–æ—Ü–µ–Ω–∏":
                response = doulikethis(text)
            elif requests == "/–≤–∏–∫–∏":
                response = wiki(text)
            elif requests == "/–º–∞—Ö–Ω–æ":
                response = mahno(vk2, text)
            elif requests == "/—Ü–∏—Ç–∞—Ç—ã":
                response = citati(vk2, text)
            elif requests == "/–∫–∞–ª—è–Ω":
                response = colyan(vk2, text)
            elif requests == "/–≤–∏–¥–µ–æ":
                response = video(vk2, text)
            elif requests == "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or requests == "/—à–∞–Ω—Å—ã":
                response = chance(text)
            elif requests == "/—Ö–µ–Ω—Ç–∞–π":
                response = hentai(vk2, text)
            elif requests == "/–≤—ã–±–µ—Ä–∏":
                response = oror(text)
            elif requests == "/—Å–º–µ—Ö":
                response = smex(text)
            elif requests == "/–ø–æ–≤—Ç–æ—Ä–∏":
                response = repeat(text)
            elif requests == "/–¥–æ–∫" or requests == "/–≥–∏—Ñ":
                response = rdocs(vk2, text)
            elif requests == "/–Ω–æ–≥–∏" or requests == "/–Ω–æ–∂–∫–∏":
                response = legs(vk2, text)
            elif requests == "/–º–µ–º":
                response = mem(vk2, text)
            elif requests == "/–∫—Ç–æ":
                response = who(vk, event, text)
            elif requests == "/–∫—É—Ä—Å":
                response = valute(text)
            elif requests == "/–¥–∞—Ç–∞":
                response = date(text)
            elif requests == "/—á–∏—Å–ª–æ":
                response = number(text)
            elif requests == "/–æ–Ω–ª–∞–π–Ω" or requests == "/online":
                response = online(vk, event)
            elif requests == "/–∞–¥–æ–ª—å—Ñ" or requests == "/–≥–∏—Ç–ª–µ—Ä":
                response = adolf(vk2, text)
            elif requests == "/–ø—Ä–∏–∑—ã–≤":
                response = callall(vk, event)
            elif requests == "/–ø—Ä–µ—Ñ–∏–∫—Å":
                response = update(uid, uname, text)

        try:
            if response["message"]:
                prefix = saveload(uid, uname)
                if "attachment" not in response:
                    response["attachment"] = None

                if event.chat_id:
                    vk.messages.send(chat_id=event.chat_id, random_id=get_random_id(),
                                    message=f"{prefix['name']}, {response['message']}",
                                     attachment=response["attachment"])
                else:
                    vk.messages.send(user_id=event.object.from_id, random_id=get_random_id(),
                                    message=f"{prefix['name']}, {response['message']}",
                                    attachment=response["attachment"])
                msgcount += 1
                status(vk2, msgcount)
        except TypeError:
            continue
except KeyboardInterrupt:
    sys.exit()
