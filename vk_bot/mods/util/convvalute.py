from vk_bot.core.utils.modutil import BacisPlug
import requests
class Convvalute(BacisPlug):
    doc = "–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç"
    command = ["/–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä"]
    def main(self):
            api = "https://www.cbr-xml-daily.ru/daily_json.js"
            r = requests.get(api)
            encode = r.json()
            usd = encode["Valute"]["USD"]["Value"]
            eur = encode["Valute"]["EUR"]["Value"]
            try:
                val = float(self.text[1])
            except ValueError:
                self.sendmsg("–¢—ã –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä—É!\n–ù–∞–ø—Ä–∏–º–µ—Ä: /–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä 5 usd")
            if val <= 0:
                self.sendmsg("–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!")
            elif self.text[2] == "usd":
                self.sendmsg(f"üí∞{'%g'%val}$:\n–í —Ä—É–±–ª—è—Ö: {round(val*usd, 3)}‚ÇΩ\n–í –µ–≤—Ä–æ: {round(val*usd/eur, 3)}‚Ç¨")
            elif self.text[2] == "eur":
                self.sendmsg(f"üí∞{'%g'%val}‚Ç¨:\n–í —Ä—É–±–ª—è—Ö: {round(val*eur, 3)}‚ÇΩ\n–í –¥–æ–ª–ª–∞—Ä–∞—Ö:{round(val*eur/usd, 3)}$")
            else:
                self.sendmsg("–í—ã–±–µ—Ä–∏: usd –∏–ª–∏ eur!\n–ù–∞–ø—Ä–∏–º–µ—Ä: /–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä 5 usd")