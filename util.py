import vk_api, requests, math, random, os
from vk_api.utils import get_random_id
import wikipedia
wikipedia.set_lang("ru")
help = """–î—Ä–æ—É. –ï—Ç–æ –±–æ—Ç –æ—Ç *slava_a_i_r(–∞–Ω–¥—Ä–µ—è) –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
üßæ–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä - –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: /–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä 2 + 2
‚òÅ/–ø–æ–≥–æ–¥–∞ - –º–æ–Ω–∞ –ø–∏—Å–∞—Ç—å –≥–æ—Ä–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç = –∏–Ω–≥–∏—à, –∏–≥–Ω–æ—Ä = –æ—à–∏–±–∫–∞
‚ù§–ø—Ä–∏–≤–µ—Ç\—Å–ø–æ–∫–∏ - :–ó
üê± /–∫–∞—Ç—ã - —Å–∫–∏–Ω–µ—Ç –ø–∏–∫—á—É –∫–æ—Ç–∏–∫–∞ –∏–ª–∏ –Ω–µ–∫–æ
üá¨üáß - /–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
üè≥‚Äçüåà/—è–æ–π, —é—Ä–∏, —Ç—Ä–∞–ø—ã, –≥–µ–±–±–µ–ª—å—Å, –º–∞—Ö–Ω–æ - —Å–¥–µ–ª–∞–µ—Ç –≤–∞—à—É –∂–∏–∑–Ω—å –ª—É—á—à–µ üåö
üëçüèª/–æ—Ü–µ–Ω–∏ - –æ—Ü–µ–Ω–∫–∞ –ø–æ 10—Ç–∏ –±–∞–ª—å–Ω–æ–π —à–∫–∞–ª–µ
üìö /–≤–∏–∫–∏ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –≤–∏–∫–∏
üé¨/–≤–∏–¥–µ–æ –Ω–∞–∑–≤–∞–Ω–∏–µ - —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –≤–∏–¥–µ–æ —Å –≤–∞—à–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
‚úî/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å /—à–∞–Ω—Å—ã - –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —á–µ–≥–æ –ª–∏–±–æ
üåö/—Ö–µ–Ω—Ç–∞–π - üåöüåöüåö
‚ùì/–≤—ã–±–µ—Ä–∏ - /–≤—ã–±–µ—Ä–∏ –æ–≥—É—Ä—Ü—ã —Å –º–æ–ª–æ–∫–æ–º –∏–ª–∏ –≥—Ä–µ—á–∫–∞ —Å –∫–µ—Ç—á—É–ø–æ–º
üê¥/—Å–º–µ—Ö - –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–º–µ—Ö–∞, –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ -  –≤—ã–¥–∞—Å—Ç —Å–ø—Ä–∞–≤–∫—É
üëÖ/–ø–æ–≤—Ç–æ—Ä–∏ - –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
üíæ/–≥–∏—Ñ –∏–ª–∏ /–¥–æ–∫ - —Å–∫–∏–Ω–µ—Ç –≤–∞–º –≥–∏—Ñ–∫—É –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
github.com/anar66/vk-bot"""
def calc(text):
    try:
        x = text[1]; x = int(x)
        encalc = text[2]; encalc = encalc.lower()
        y = text[3]; y = int(y)
    except:
        return
    if encalc == "+" or encalc == "—Å–ª–æ–∂–µ–Ω–∏–µ":
        result = x + y
    elif encalc == "-" or encalc == "–≤—ã—á–∏—Ç–∞–Ω–∏–µ":
        result = x - y
    elif encalc == "*" or encalc == "—É–º–Ω–æ–∂–µ–Ω–∏–µ":
        result = x * y
    elif encalc == "**" or encalc == "—Å—Ç–µ–ø–µ–Ω—å" or encalc == "^":
        result = x ** y
    elif encalc == "/":
        try:
            x / y
        except ZeroDivisionError:
            result = "–≤–∑–æ—Ä–≤–∞—Ç—å –ø–ª–∞–Ω–µ—Ç—É —Ö–æ—á–µ—à—å?"
    elif encalc == "–∫–æ—Ä–µ–Ω—å":
        result = math.sqrt(x), math.sqrt(y)
    elif encalc == "—Å–∏–Ω—É—Å":
        result = math.sin(x), math.sin(y)
    elif encalc == "–∫–æ—Å–∏–Ω—É—Å":
        result = math.cos(x), math.cos(y)
    else:
        return
    return {"message":"–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {}".format(result), "attachment": None}
def translit(text, vk=None):
        apikey = "trnsl.1.1.20190508T201810Z.385ebfa1e596baa0.90672cf8655555b1b51ced31b03c2e8bb9bde46c"
        url = "https://translate.yandex.net/api/v1.5/tr.json/translate"
        params = {"key": apikey,
                "text":text[0:],
                "lang":"ru-en"}
        r = requests.get(url, params=params)
        encode = r.json()
        # if vk:
        #     encode = " ".join(encode["text"][1:])
        #     return {"message":"–ü–µ—Ä–µ–≤–æ–¥: {}".format(encode),"attachment": None}
        return encode["text"][0]
def weather(text):
    try:
        qr = text[1]
    except:
        return
    q = translit(text=qr); q.lower()
    apiurl = "http://api.openweathermap.org/data/2.5/find"
    appid = '22c7bf8e593c47b0cf88f390e8e5376a'
    params = {
                'q': q,
                'appid': appid,
                'units': 'metric',
                'lang': 'ru'
                }
    try:
        r = requests.get(apiurl, params=params, timeout=5)
        encode = r.json()
        w = encode['list'][0]['weather'][0]['description']
        temp = encode["list"][0]["main"]["temp"]
        vlaga = encode["list"][0]["main"]["humidity"]
        wind = encode["list"][0]["wind"]["speed"]
    except:
        return
    return {"message":f"""–ì–æ—Ä–æ–¥: {qr}
    üå•–ü–æ–≥–æ–¥–∞: {w}
    üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞
    üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {vlaga}
    üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind}–º/—Å""",
    "attachment": None}
def answer(text):
    zapros = text[0].lower()
    if zapros == "—Å–ø–æ–∫–∏" or zapros == "—Å–ø–æ–∫–æ–π–Ω–æ–π":
        answer = ["–°–ø–æ—Ç—å–∫–∏", "–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏", "–°–ø–∏, –Ω–æ —è –ø—Ä–∏–¥—É –∏ –≤—ã–µ–±—É —Ç–µ–±—è –∏—Å—Ç–æ—Ä–∏–µ–π –∞–∏—Ä"
                  ,"–°–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤", "–≠—Ä–æ—Ç–∏—à–Ω—ã—Ö —Å–Ω–æ–≤üåöüåöüåö"]
    else:
        answer = ["–ö—É–∫", "–∑–∏–≥ —Ö–∞–π–ª—å", "–∫—É–∫—É –Ω–∞—Ö—É–π",
                   "üá∫üá¶—Å–ª–∞–≤–∞ —É–∫—Ä–∞–∏–Ω–µüá∫üá¶", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–∑–¥—Ä–∞–≤–∏—è –∂–µ–ª–∞—é"]
    return {"message":random.choice(answer),"attachment": None}
def doulikethis(text):
    osenka = random.randint(0, 10)
    text = " ".join(text[1:])
    return {"message": f"–ú–æ—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ {text}: {osenka}/10", "attachment": None}
def wiki(text):
    text = " ".join(text[1:])
    try:
        wikiotvet = wikipedia.summary(text, sentences=3)
        if len(wikiotvet) < 355:
            wikiotvet = wikipedia.summary(text, sentences=6)
    except wikipedia.exceptions.DisambiguationError:
        wikiotvet = "—Ç–æ—á–Ω–µ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞"
    except wikipedia.exceptions.PageError:
        wikiotvet = "—Ç–∞–∫–æ–≥–æ –Ω–µ—Ç"
    return {"message":wikiotvet, "attachment":None}
def video(vk, text):
    text = " ".join(text[1:])
    video = vk.video.search(q=text, count=50)
    try:
        videor = random.choice(video["items"])
    except:
        return
    videoid = videor["id"]
    videoow = videor["owner_id"]
    video = f"video{videoow}_{videoid}"
    return{"message": f"–í–µ–¥–æ—Å–∏–∫ –ø–æ –∑–∞–∫–∞–∑—É - {text}:", "attachment":video}
def chance(text):
    text = " ".join(text[1:])
    rnd =  random.randint(0, 100)
    message = f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å {text} —Ä–∞–≤–Ω–∞ {rnd}%"
    return {"message":message, "attachment": None}
def oror(text):
    text = " ".join(text[1:])
    text = random.choice(text.split("–∏–ª–∏"))
    return {"message":f"—è –≤—ã–±–∏—Ä–∞—é: {text}", "attachment": None}
def repeat(text):
    text = " ".join(text[1:])
    return{"message": text, "attachment": None}
def rdocs(vk, text):
    text = " ".join(text[1:])
    docs = vk.docs.search(q=text, count=100)
    try:
        docs = random.choice(docs["items"])
    except:
        return
    docsid = docs["id"]
    docsow = docs["owner_id"]
    docs = f"doc{docsow}_{docsid}"
    return{"message": f"–ì–∏—Ñ–∫–∞/–¥–æ–∫—É–º–µ–Ω—Ç –ø–æ –∑–∞–∫–∞–∑—É - {text}:", "attachment":docs}
